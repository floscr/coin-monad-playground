// Generated by BUCKLESCRIPT VERSION 4.0.8, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var MonadClass$CoinMonad = require("./MonadClass.bs.js");
var FunctorClass$CoinMonad = require("./FunctorClass.bs.js");

function Make(K) {
  var run = function (k, ma) {
    return Curry._1(ma, k);
  };
  var pure = function (a, k) {
    return /* tuple */[
            k,
            a
          ];
  };
  var bind = function (f, ma, k) {
    var match = Curry._1(ma, k);
    return Curry._2(f, match[1], match[0]);
  };
  var Monad_instance = /* module */[
    /* pure */pure,
    /* bind */bind
  ];
  var Monad = MonadClass$CoinMonad.Extend(Monad_instance);
  var Functor_instance = FunctorClass$CoinMonad.Of_monad(Monad_instance);
  var get = function (k) {
    return /* tuple */[
            k,
            k
          ];
  };
  var set = function (k, param) {
    return /* tuple */[
            k,
            /* () */0
          ];
  };
  var modify = function (f) {
    return Curry._2(Monad[/* >>= */2], get, (function (k) {
                  var partial_arg = Curry._1(f, k);
                  return (function (param) {
                      return /* tuple */[
                              partial_arg,
                              /* () */0
                            ];
                    });
                }));
  };
  return /* module */[
          /* Monad_instance */Monad_instance,
          /* Monad */Monad,
          /* Functor_instance */Functor_instance,
          /* run */run,
          /* get */get,
          /* set */set,
          /* modify */modify
        ];
}

exports.Make = Make;
/* No side effect */
